pipeline {
    agent any
    
    environment {
        PATH_CLIENT = "client"
        USERNAME = "hgthaii"
        DOCKER_IMAGE_NAME = "client"
        NODE_VERSION = "14.21.2"
    }
    
    stages {
        stage("Clone") {
            steps {
                echo "Cloning source from Git repository"
                git "https://github.com/hgthaii/finder.git"
            }
        }
        
        stage("Build") {
            steps {
                dir("${PATH_CLIENT}") {
                    bat "npm install node@${NODE_VERSION}"
                    bat "npm install"
                    bat "npm run build"
                }
            }
        }
        
        stage("Test") {
            steps {
                dir("${PATH_CLIENT}") {
                    echo "Running tests"
                    bat "npm run format"
                }
            }
        }
        
        stage("Docker Build and Push") {
            steps {
                dir("${PATH_CLIENT}") {
                    bat "docker build -t ${USERNAME}/${DOCKER_IMAGE_NAME} --build-arg REACT_APP_API_URI=${REACT_APP_API_URI} ."
                    bat "docker login -u ${USERNAME} -p ${PASSWORD_EMAIL}"
                    bat "docker push ${USERNAME}/${DOCKER_IMAGE_NAME}:latest"
                }
            }
        }
    }
    
    post {
        success {
            emailext (
                attachLog: true,
                body: "Jenkins Pipeline Client done successfully!",
                subject: "Jenkins Pipeline Client Success",
                to: "${TO_EMAIL}",
            )
        }
        
        failure {
            emailext (
                attachLog: true,
                body: "Jenkins Pipeline Client has failed!",
                subject: "Jenkins Pipeline Client Failed",
                to: "${TO_EMAIL}",
            )
        }
    }
}
